{"ast":null,"code":"var _jsxFileName = \"/Users/poojamr/Documents/Bajrangminioilmill/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { cartAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case 'UPDATE_ITEM':\n      return {\n        ...state,\n        items: state.items.map(item => item.id === action.payload.id ? action.payload : item)\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: [],\n    loading: true\n  });\n  const fetchCart = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      // Load from localStorage for development\n      const savedCart = localStorage.getItem('cart');\n      const cartItems = savedCart ? JSON.parse(savedCart) : [];\n      dispatch({\n        type: 'SET_CART',\n        payload: cartItems\n      });\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const addToCart = async item => {\n    try {\n      // For development, use local storage instead of API\n      const cartItem = {\n        id: Date.now(),\n        product: item.product,\n        product_name: item.product_name || 'Product',\n        product_image: item.product_image,\n        quantity: item.quantity,\n        package_size: item.package_size,\n        unit_type: item.unit_type,\n        price: item.price,\n        total_price: item.price * item.quantity\n      };\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: cartItem\n      });\n\n      // Save to localStorage\n      const updatedItems = [...state.items, cartItem];\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n  const updateCartItem = async (id, data) => {\n    try {\n      const updatedItem = {\n        ...state.items.find(item => item.id === id),\n        ...data\n      };\n      updatedItem.total_price = updatedItem.price * updatedItem.quantity;\n      dispatch({\n        type: 'UPDATE_ITEM',\n        payload: updatedItem\n      });\n      const updatedItems = state.items.map(item => item.id === id ? updatedItem : item);\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n    }\n  };\n  const removeFromCart = async id => {\n    try {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: id\n      });\n      const updatedItems = state.items.filter(item => item.id !== id);\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n  const getTotalPrice = () => {\n    return state.items.reduce((total, item) => total + item.total_price, 0);\n  };\n  const getTotalItems = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      ...state,\n      addToCart,\n      updateCartItem,\n      removeFromCart,\n      getTotalPrice,\n      getTotalItems,\n      fetchCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"oB/kacPmerhbHFE9iL51Bec2jxg=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","cartAPI","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","loading","map","item","id","filter","CartProvider","children","_s","dispatch","fetchCart","savedCart","localStorage","getItem","cartItems","JSON","parse","error","console","addToCart","cartItem","Date","now","product","product_name","product_image","quantity","package_size","unit_type","price","total_price","updatedItems","setItem","stringify","updateCartItem","data","updatedItem","find","removeFromCart","getTotalPrice","reduce","total","getTotalItems","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/Users/poojamr/Documents/Bajrangminioilmill/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { cartAPI } from '../services/api';\n\nconst CartContext = createContext();\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return { ...state, items: action.payload, loading: false };\n    case 'ADD_ITEM':\n      return { ...state, items: [...state.items, action.payload] };\n    case 'UPDATE_ITEM':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.payload.id ? action.payload : item\n        )\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: [],\n    loading: true\n  });\n\n  const fetchCart = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      // Load from localStorage for development\n      const savedCart = localStorage.getItem('cart');\n      const cartItems = savedCart ? JSON.parse(savedCart) : [];\n      dispatch({ type: 'SET_CART', payload: cartItems });\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const addToCart = async (item) => {\n    try {\n      // For development, use local storage instead of API\n      const cartItem = {\n        id: Date.now(),\n        product: item.product,\n        product_name: item.product_name || 'Product',\n        product_image: item.product_image,\n        quantity: item.quantity,\n        package_size: item.package_size,\n        unit_type: item.unit_type,\n        price: item.price,\n        total_price: item.price * item.quantity\n      };\n      dispatch({ type: 'ADD_ITEM', payload: cartItem });\n      \n      // Save to localStorage\n      const updatedItems = [...state.items, cartItem];\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  const updateCartItem = async (id, data) => {\n    try {\n      const updatedItem = { ...state.items.find(item => item.id === id), ...data };\n      updatedItem.total_price = updatedItem.price * updatedItem.quantity;\n      dispatch({ type: 'UPDATE_ITEM', payload: updatedItem });\n      \n      const updatedItems = state.items.map(item => \n        item.id === id ? updatedItem : item\n      );\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n    }\n  };\n\n  const removeFromCart = async (id) => {\n    try {\n      dispatch({ type: 'REMOVE_ITEM', payload: id });\n      const updatedItems = state.items.filter(item => item.id !== id);\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n\n  const getTotalPrice = () => {\n    return state.items.reduce((total, item) => total + item.total_price, 0);\n  };\n\n  const getTotalItems = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  useEffect(() => {\n    fetchCart();\n  }, []);\n\n  return (\n    <CartContext.Provider value={{\n      ...state,\n      addToCart,\n      updateCartItem,\n      removeFromCart,\n      getTotalPrice,\n      getTotalItems,\n      fetchCart\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within CartProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}